// #include <layout_shift.dtsi>

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <layout_shift_kp_override.dtsi>

#define DEF 0
#define MARK 1
#define FUNC 2
#define NUM 3
#define MOUSE 4
#define SCROLL 5
#define BT 5

&mt {
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
};

/ {

/**************************************************************************/

/ {
    combos {
        compatible = "zmk,combos";

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <12 13>;
        };

        mo_scroll {
            bindings = <&mo SCROLL>;
            key-positions = <33 34>;
        };

        mo_scroll2 {
            bindings = <&mo SCROLL>;
            key-positions = <16 15>;
        };

        alt_space {
            bindings = <&kp LA(SPACE)>;
            key-positions = <38 39>;
        };

        combo_capslock {
            bindings = <&kp CAPS>;
            key-positions = <12 13 14>;
        };

        toggle_autoshift {
            bindings = <&tog AUTOSHIFT>;
            key-positions = <0 11>;
        };

        toggle_IME {
            bindings = <&kp LC(SPACE)>;
            key-positions = <36 41>;
        };

        LWin {
            bindings = <&kp LEFT_GUI>;
            key-positions = <24 36>;
        };

        Mo_Num {
            bindings = <&mo 3>;
            key-positions = <37 38>;
        };

        toggle_Num {
            bindings = <&tog 3>;
            key-positions = <40 41>;
        };
    };

    /**************************************************************************/

    macros {
        // for Auto Shift

        shifted: macro_shifted_kp {
            #binding-cells = <1>;
            label = "MACRO_SHIFTED_KP";
            compatible = "zmk,behavior-macro-one-param";
            bindings =
                <&macro_press>,
                <&kp LSHFT &macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        as: autoshift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            label = "AUTOSHIFT_KP";
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;
        };
    };

    /**************************************************************************/

    behaviors {
        td_bspc: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&lt FUNCS BSPC>, <&kp BSPC>;
        };

        td_spc: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&lt FUNCS SPACE>, <&kp SPACE>;
        };

        mouse_scroll: mouse_wheel_scroll {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <25>;
        };

        mod_mkp: mod_mkp {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_MKP";
            bindings = <&kp>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };

        as_ht: autoshift_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT_HOLD_TAP";
            #binding-cells = <2>;
            tapping_term_ms = <180>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&shifted>, <&kp>;
        };

        tog_off: toggle_layer_off {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };

        ime_alt: ime_alt {
            compatible = "zmk,behavior-hold-tap";
            label = "IME_ALT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        tog_on: tog_layer_on {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "on";
            label = "TOG_ON";
        };
    };

    /**************************************************************************/
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Def";
            bindings = <
&kp ESC       &kp Q     &kp L      &kp U     &kp COMMA       &kp PERIOD          &kp F           &kp W          &kp R      &kp Y      &kp P      &kp SLASH
&mt LCTRL TAB &kp E     &kp I      &kp A     &kp O           &kp MINUS           &kp K           &kp T          &kp N      &kp L      &kp H      &mt RCTRL SQT
&kp LSHFT     &kp Z     &kp X      &kp C     &kp V           &kp EQUAL           &kp G           &kp D          &kp M      &kp J      &kp B      &mt RSHFT SEMI
&mt LCTL ESC  &kp LGUI  &kp LALT             &lt FUNC SPACE  &lt MARK SPACE      &lt MARK RET    &lt FUNC BACKSPACE        &kp LEFT   &kp DOWN   &kp RIGHT
&kp LEFT      &kp UP    &kp SPACE  &kp DOWN  &kp RIGHT                                          &kp HOME       &kp PG_UP  &kp ENTER  &kp PG_DN  &kp END
                                   &none                                                                       &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN  C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
        };

        mark_layer {
            label = "Mark";
            bindings = <
&kp GRAVE     &kp LS(N1)     &kp LS(N2)  &kp LS(N3)  &kp LS(N4)      &kp LS(N5)          &kp LS(N6)      &kp LS(N7)  &kp LS(N8)    &kp LS(N9)    &kp LS(N0)  &kp LS(SLASH)
&kp TAB       &kp MINUS      &kp LBKT    &kp RBKT    &kp LS(COMMA)   &kp LS(PERIOD)      &kp LEFT        &kp LEFT    &kp DOWN      &kp UP        &kp RIGHT   &kp LS(SQT)
&kp LSHFT     &kp LS(MINUS)  &kp LBRC    &kp RBRC    &kp LS(N9)      &kp LS(N0)          &kp LS(GRAVE)   &kp GRAVE   &kp BSLH      &kp LS(BSLH)  &kp EQUAL   &kp LS(EQUAL)
&kp F15       &kp F16        &kp LALT                &trans          &kp SPACE           &kp BACKSPACE   &kp DEL     &kp LEFT      &kp DOWN    &kp RIGHT
&kp LEFT      &kp UP         &kp SPACE  &kp DOWN  &kp RIGHT                                          &kp HOME       &kp PG_UP  &kp ENTER  &kp PG_DN  &kp END
                                   &none                                                                       &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN  C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
        };

        function_layer {
            label = "Fnc";
            bindings = <
&kp ESC    &kp F1     &kp F2     &kp F3     &kp F4     &kp F5         &kp F6     &kp F7     &kp F8     &kp F9     &kp F10    &kp F11
&caps_word  &kp LC(Y)  &none      &none      &none      &none      &none   &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp F12
&kp LC(S)   &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LG(V)  &none   &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &kp LS(LG(S))
&trans     &trans     &kp LALT              &kp ENTER  &kp ENTER      &kp ENTER  &kp ENTER             &trans     &trans     &trans
&kp LEFT   &kp UP     &kp SPACE  &kp DOWN   &kp RIGHT                            &kp HOME   &kp PG_UP  &kp ENTER  &kp PG_DN  &kp END
                                 &none                                                      &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        num_layer {
            label = "Num";
            bindings = <
&kp KP_NUM  &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_N4             &kp KP_N5              &kp KP_N6  &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_N0        &kp EQUAL
&trans      &as A      &as B      &as C      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PLUS   &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_ASTERISK  &kp COMMA
&trans      &as D      &as E      &as F      &none                 &kp X                  &kp MINUS  &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_SLASH     &kp KP_DOT
&trans           &kp ENTER      &kp ENTER            &kp ENTER  &kp ENTER      &kp ENTER  &kp ENTER             &trans     &trans     &trans
&kp LEFT         &kp UP         &kp SPACE  &kp DOWN  &kp RIGHT                            &kp HOME   &kp PG_UP  &kp ENTER  &kp PG_DN  &kp END
                                           &none                                                     &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        mouse_layer {
            label = "Mouse";
            bindings = <
&trans    &trans  &trans     &trans    &trans     &trans      &trans  &trans    &trans     &mod_mkp LSHIFT MB4  &mod_mkp LCTRL MB5    &trans
&trans    &trans  &trans     &trans    &trans     &trans      &trans  &trans    &mkp MB1   &mkp MB3             &mkp MB2              &trans
&trans    &trans  &trans     &trans    &trans     &trans      &trans  &trans    &trans     &trans               &trans                &trans
&trans    &trans  &trans               &trans     &trans      &trans  &trans               &trans               &trans                &trans
&kp LEFT  &kp UP  &kp SPACE  &kp DOWN  &kp RIGHT                      &kp HOME  &kp PG_UP  &kp ENTER            &kp PG_DN             &kp END
                             &kp A                                              &kp B
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        scroll_layer {
            label = "Scr";
            bindings = <
&trans    &trans  &trans     &trans    &trans     &trans      &trans  &trans    &trans     &trans     &trans     &trans
&trans    &trans  &trans     &trans    &trans     &trans      &trans  &trans    &trans     &trans     &trans     &trans
&trans    &trans  &trans     &trans    &trans     &trans      &trans  &trans    &mkp MB1   &mkp MB3   &mkp MB2   &trans
&trans    &trans  &trans               &trans     &trans      &trans  &trans               &trans     &trans     &trans
&kp LEFT  &kp UP  &kp SPACE  &kp DOWN  &kp RIGHT                      &kp HOME  &kp PG_UP  &kp ENTER  &kp PG_DN  &kp END
                             &kp A                                              &kp B
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        bt_layer {
            label = "BT";
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &bt BT_CLR_ALL  &trans    &trans     &trans     &trans     &trans
&trans      &trans        &trans        &trans        &trans        &trans            &trans          &trans    &trans     &trans     &trans     &trans
&trans      &trans        &trans        &trans        &trans        &trans            &trans          &trans    &trans     &trans     &trans     &trans
&trans      &trans        &trans                      &trans        &trans            &trans          &trans               &trans     &trans     &trans
&kp LEFT    &kp UP        &kp SPACE     &kp DOWN      &kp RIGHT                                       &kp HOME  &kp PG_UP  &kp ENTER  &kp PG_DN  &kp END
                                        &kp A                                                                   &kp B
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
